///$tab Auto-generated section
///$autogenerated
Set dataManagerTables = '','Training','Survey$','Hierarchy$','Employees','countryISO3','World.shp/Features';
//This block renames script tables from non generated section which conflict with the names of managed tables

For each name in $(dataManagerTables) 
    Let index = 0;
    Let currentName = name; 
    Let tableNumber = TableNumber(name); 
    Let matches = 0; 
    Do while not IsNull(tableNumber) or (index > 0 and matches > 0)
        index = index + 1; 
        currentName = name & '-' & index; 
        tableNumber = TableNumber(currentName) 
        matches = Match('$(currentName)', $(dataManagerTables));
    Loop 
    If index > 0 then 
            Rename Table '$(name)' to '$(currentName)'; 
    EndIf; 
Next; 
Set dataManagerTables = ;


Unqualify *;

[Training]:
LOAD
	[Employee_ID],
	[Course_ID],
	[# Enrollment],
	[Training Hours],
	[Training Cost],
	[# Program Completion]
 FROM [lib://AttachedFiles/Training.qvd]
(qvd);

[Survey$]:
LOAD
	[Employee_ID],
	[Question Type],
	[Score],
	[Responses]
 FROM [lib://AttachedFiles/Survey$.qvd]
(qvd);

[Hierarchy$]:
LOAD
	[Employee_ID],
	[Director],
	[VP]
 FROM [lib://AttachedFiles/Hierarchy$.qvd]
(qvd);

[Employees]:
LOAD
	[Month],
	[Employee_ID],
	[EmployeeCount],
	[Employee Name],
	[Reason],
	[Job Family],
	[Job],
	[Position],
	[Geography],
	[Country],
	[CountryCode],
	[Town or City],
	[Location],
	[Gender],
	[Band],
	[Position1],
	[Employment Status],
	[Organization Type],
	[Organization Class],
	[Organization],
	[Ethnic Group],
	[Recruiting_Channel],
	[Recruiting_Source],
	[Salary],
	[Employee Type],
	[Terminated Employee],
	[Termination],
	[NewHire],
	[New Hires],
	[Tenure],
	[Tenure Group],
	[Age],
	[Age Group],
	[CountryCode3] AS [CountryCode3-world.Name],
	[Year]
 FROM [lib://AttachedFiles/Employees.qvd]
(qvd);

[countryISO3]:
LOAD
	[Course_ID],
	[Course],
	[Course Type],
	[Developmental Program]
 FROM [lib://AttachedFiles/countryISO3.qvd]
(qvd);

[World.shp/Features]:
LOAD
	[world.Name] AS [CountryCode3-world.Name],
	[world.Area]
 FROM [lib://AttachedFiles/world.kml]
(kml, Table is [World.shp/Features]);